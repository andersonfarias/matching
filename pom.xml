<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- TODO: adicionar licensa -->

	<groupId>farias.anderson.challenges.sortable</groupId>
	<artifactId>matching</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Matching Problem</name>
	<description>This is my implementation of a coding challenge proposed by the company called Sortable. The problem is know as Object Matching (also referred to as duplicate identification, record linkage, entity resolution or reference reconciliation) and is a crucial task for data integration and data cleaning. The task is to detect multiple representations of the same real-world object. This is a challenging task particularly for objects that are highly heterogeneous and of limited data quality, e.g., regarding completeness and consistency of their descriptions. The goal is to match product listings from a 3rd party retailer, e.g. “Nikon D90 12.3MP Digital SLR Camera (Body Only)” against a set of known products, e.g. “Nikon D90”.</description>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.6.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>info.debatty</groupId>
			<artifactId>java-string-similarity</artifactId>
			<version>RELEASE</version>
		</dependency>

		<!-- Testing Dependencies -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

	</dependencies>

	<!-- TODO: adicionar Licenca -->
	<licenses>
		<license>
			<name>Apache 2.0 License</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<maxmem>1024m</maxmem>
						<fork>true</fork>
						<compilerArgs>
							<arg>-Xlint:all,-serial,-path</arg>
						</compilerArgs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>